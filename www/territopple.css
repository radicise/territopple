body {
    background-color: #ffffff;
    --blink-light: #fff;
}
#display-settings {
    margin-bottom: 10px;
    max-width: 500px;
}
#settings-expand-label {
    font-size: 20px;
    float: right;
    user-select: none;
    cursor: pointer;
}
#board-zoom {
    vertical-align: middle;
}
#container-container {
    width: fit-content;
    /* border: solid black 2px; */
    overflow: hidden;
}
#row-container {
    display: flex;
    justify-content: space-between;
    /* display: grid; */
    /* grid-template-columns: 1fr 1fr; */
}
#joined-table {
    height: fit-content;
}
#joined-table > tbody > tr > td:nth-child(3) {
    text-align: center;
    font-family: monospace;
}
table {
    border-collapse: collapse;
    border: 3px solid #888888;
}
th, tr, td {
    border: 1px solid #888888;
    padding: 5px;
}
.container {
    display: grid;
    border: solid black 2px;
    grid-template-columns: repeat(var(--ncols), fit-content(100%));
    grid-template-rows: repeat(var(--nrows), fit-content(100%));
    width: calc(var(--tile-font-size) * 1.5 * 1px * var(--ncols));
    height: calc(var(--tile-font-size) * 1.5 * 1px * var(--nrows));
    font-family: monospace, monospace;
    --tile-font-size: 32;
    font-size: calc(var(--tile-font-size) * 1px);
    user-select: none;
    --tile-hover: #0000001f;
    --tile-last-move: #aaaaaa1f;
    --tile-volatile: #dddddd1f;
}
.container > svg {
    width: calc(var(--tile-font-size) * var(--ncols) * 1.5px);
    height: calc(var(--tile-font-size) * var(--nrows) * 1.5px);
    --l-tile-hover: rgb(from var(--tile-hover) r g b / 1);
    --volatile-mul: 1;
    --volatile-add: 0;
    --lm-contrib: 35%;
    --main-contrib: 75%;
    --vol-contrib: 25%;
    --hov-contrib: 15%;
}
.container > svg > defs > g > rect:last-child {
    fill: var(--color);
}
.container > svg > defs > g > rect:first-child {
    /* fill: color-mix(in srgb, var(--h-color, transparent) 50%, transparent); */
    --c: rgb(from var(--h-color) r g b / 0.25);
    fill: var(--c, revert-layer);
}
.container > svg > use {
    --l-alpha-tweak: var(--alpha-tweak);
    --base: rgb(from var(--color) r g b / var(--l-alpha-tweak));
    --lm-amt: 0%;
    --vol-amt: 0%;
    --hov-amt: 0%;
    /* fill: color-mix(in srgb, var(--base) var(--main-contrib), var(--tile-last-move) var(--lm-amt)); */
    fill: color-mix(in srgb, color-mix(in srgb, var(--base) var(--main-contrib), var(--l-tile-hover) var(--hov-amt)), var(--tile-last-move) var(--lm-amt));
    /* fill: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, var(--tile-last-move) var(--lm-amt), var(--tile-hover) var(--hov-amt)), var(--tile-volatile) var(--vol-amt)), var(--base) var(--main-contrib)); */
}
.container > div {
    color: #000000;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.5em;
    height: 1.5em;
}
.container > div > div {
    pointer-events: none;
}
.container:hover {
    cursor: pointer;
}
.container.tile-hover > div:hover {
    background: var(--tile-hover);
}
.container.tile-hover > svg > use:hover {
    /* fill: var(--tile-hover); */
    --hov-amt: var(--hov-contrib);
    --h-color: var(--color);
}
.container.volatiles > div.volatile {
    background: var(--tile-volatile);
}
.container.volatiles > svg > use.volatile {
    --l-alpha-tweak: clamp(0, calc(var(--alpha-tweak) * var(--volatile-mul) + var(--volatile-add)), 1);
    --vol-amt: var(--vol-contrib);
    /* fill: var(--tile-hover); */
}
.container > svg > use.last-move {
    --lm-amt: var(--lm-contrib);
}
div.last-move {
    background: var(--tile-last-move);
}

span#underboard-container {
    display: flex;
    justify-content: space-between;
}

span#underboard-left, span#underboard-right {
    max-width: 50%;
}

span#turn-time {
    font-family: monospace;
}

svg#render {
    width: 100%;
    height: 100%;
}
@keyframes blink {
    0%, 49% {background: var(--blink-light);}
    50%, 100% {background: var(--blink-dark);}
}
@keyframes blink2 {
    0%, 49% {background: var(--blink-dark);}
    50%, 100% {background: var(--blink-light);}
}
.blink {
    animation: blink var(--blink-dur, 0.5s) linear var(--blink-count, 3) alternate;
}
.blink2 {
    animation: blink var(--blink-dur, 0.5s) linear var(--blink-count, 3) forwards;
}
