this file documents the endpoints of the data server

:INTERNALPORT {
    GET /room-id {
        generates and reserves a room id
        fails if generation takes too long
        SUCCESS: 200, body contains room id
        FAILURE: 503
    }
    DELETE /room?id=${ROOMID} {
        deletes the record of a room
        fails if the id does not exist
        SUCCESS: 200
        FAILURE: 404
    }
    POST /room-created?id=${ROOMID} {
        uses the JSON object provided in the request body to populate the initial details of a room
        404 indicates that the room id does not exist
        403 indicates that the room information has already been populated
        422 indicates that the JSON body is either malformed or missing required fields
        BODY:
        {
            "worker":number,
            "public":boolean,
            "capacity":number,
            "dstr":string,
            "can_spectate":boolean,
            "playing":number ?? 0,
            "spectating":number ?? 0
        }
        SUCCESS: 200
        FAILURE: 404, 403, 422
    }
    GET /worker?id=${ROOMID} {
        gets the id of the worker process handling the given room
        fails if the room does not exist or its information has not yet been populated
        SUCCESS: 200, body contains worker id
        FAILURE: 404
    }
    DELETE /worker?id=${WORKERID} {
        deletes all room records that have the specified worker id, this should be used to remove records when a worker terminates
        fails if the id is not present or not a number
        SUCCESS: 200
        FAILURE: 404
    }
    PATCH /room?id=${ROOMID} {
        uses the JSON object provided in the request body to update room details
        404 indicates that the room id does not exist
        422 indicates that the JSON body is either malformed or missing required fields
        BODY:
        {
            "playing":number,
            "spectating":number
        }
        SUCCESS: 200
        FAILURE: 404, 422
    }
}

:DATAPORT {
    GET /serverlist?page=${PAGE ?? 1} {
        gets up to 50 room records from the list of public servers, selected by page number
        if page is invalid, an empty list will be returned
        BODY:
        [
            {
                "ident":string,
                "capacity":number,
                "playing":number,
                "spectating":number,
                "dstr":string,
                "can_spectate":boolean
            }
        ]
    }
}
